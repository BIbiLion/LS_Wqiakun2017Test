/****************************************************************************
** Meta object code from reading C++ file 'qftp.cpp'
**
** Created by: The Qt Meta Object Compiler version 67 (Qt 5.2.1)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <QtCore/qbytearray.h>
#include <QtCore/qmetatype.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'qftp.cpp' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 67
#error "This file was generated using the moc from 5.2.1. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
struct qt_meta_stringdata_QFtpDTP_t {
    QByteArrayData data[15];
    char stringdata[213];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    offsetof(qt_meta_stringdata_QFtpDTP_t, stringdata) + ofs \
        - idx * sizeof(QByteArrayData) \
    )
static const qt_meta_stringdata_QFtpDTP_t qt_meta_stringdata_QFtpDTP = {
    {
QT_MOC_LITERAL(0, 0, 7),
QT_MOC_LITERAL(1, 8, 8),
QT_MOC_LITERAL(2, 17, 0),
QT_MOC_LITERAL(3, 18, 8),
QT_MOC_LITERAL(4, 27, 9),
QT_MOC_LITERAL(5, 37, 20),
QT_MOC_LITERAL(6, 58, 12),
QT_MOC_LITERAL(7, 71, 15),
QT_MOC_LITERAL(8, 87, 15),
QT_MOC_LITERAL(9, 103, 11),
QT_MOC_LITERAL(10, 115, 28),
QT_MOC_LITERAL(11, 144, 22),
QT_MOC_LITERAL(12, 167, 18),
QT_MOC_LITERAL(13, 186, 11),
QT_MOC_LITERAL(14, 198, 13)
    },
    "QFtpDTP\0listInfo\0\0QUrlInfo\0readyRead\0"
    "dataTransferProgress\0connectState\0"
    "socketConnected\0socketReadyRead\0"
    "socketError\0QAbstractSocket::SocketError\0"
    "socketConnectionClosed\0socketBytesWritten\0"
    "setupSocket\0dataReadyRead\0"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_QFtpDTP[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
      11,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       4,       // signalCount

 // signals: name, argc, parameters, tag, flags
       1,    1,   69,    2, 0x06,
       4,    0,   72,    2, 0x06,
       5,    2,   73,    2, 0x06,
       6,    1,   78,    2, 0x06,

 // slots: name, argc, parameters, tag, flags
       7,    0,   81,    2, 0x08,
       8,    0,   82,    2, 0x08,
       9,    1,   83,    2, 0x08,
      11,    0,   86,    2, 0x08,
      12,    1,   87,    2, 0x08,
      13,    0,   90,    2, 0x08,
      14,    0,   91,    2, 0x08,

 // signals: parameters
    QMetaType::Void, 0x80000000 | 3,    2,
    QMetaType::Void,
    QMetaType::Void, QMetaType::LongLong, QMetaType::LongLong,    2,    2,
    QMetaType::Void, QMetaType::Int,    2,

 // slots: parameters
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void, 0x80000000 | 10,    2,
    QMetaType::Void,
    QMetaType::Void, QMetaType::LongLong,    2,
    QMetaType::Void,
    QMetaType::Void,

       0        // eod
};

void QFtpDTP::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        QFtpDTP *_t = static_cast<QFtpDTP *>(_o);
        switch (_id) {
        case 0: _t->listInfo((*reinterpret_cast< const QUrlInfo(*)>(_a[1]))); break;
        case 1: _t->readyRead(); break;
        case 2: _t->dataTransferProgress((*reinterpret_cast< qint64(*)>(_a[1])),(*reinterpret_cast< qint64(*)>(_a[2]))); break;
        case 3: _t->connectState((*reinterpret_cast< int(*)>(_a[1]))); break;
        case 4: _t->socketConnected(); break;
        case 5: _t->socketReadyRead(); break;
        case 6: _t->socketError((*reinterpret_cast< QAbstractSocket::SocketError(*)>(_a[1]))); break;
        case 7: _t->socketConnectionClosed(); break;
        case 8: _t->socketBytesWritten((*reinterpret_cast< qint64(*)>(_a[1]))); break;
        case 9: _t->setupSocket(); break;
        case 10: _t->dataReadyRead(); break;
        default: ;
        }
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        switch (_id) {
        default: *reinterpret_cast<int*>(_a[0]) = -1; break;
        case 6:
            switch (*reinterpret_cast<int*>(_a[1])) {
            default: *reinterpret_cast<int*>(_a[0]) = -1; break;
            case 0:
                *reinterpret_cast<int*>(_a[0]) = qRegisterMetaType< QAbstractSocket::SocketError >(); break;
            }
            break;
        }
    } else if (_c == QMetaObject::IndexOfMethod) {
        int *result = reinterpret_cast<int *>(_a[0]);
        void **func = reinterpret_cast<void **>(_a[1]);
        {
            typedef void (QFtpDTP::*_t)(const QUrlInfo & );
            if (*reinterpret_cast<_t *>(func) == static_cast<_t>(&QFtpDTP::listInfo)) {
                *result = 0;
            }
        }
        {
            typedef void (QFtpDTP::*_t)();
            if (*reinterpret_cast<_t *>(func) == static_cast<_t>(&QFtpDTP::readyRead)) {
                *result = 1;
            }
        }
        {
            typedef void (QFtpDTP::*_t)(qint64 , qint64 );
            if (*reinterpret_cast<_t *>(func) == static_cast<_t>(&QFtpDTP::dataTransferProgress)) {
                *result = 2;
            }
        }
        {
            typedef void (QFtpDTP::*_t)(int );
            if (*reinterpret_cast<_t *>(func) == static_cast<_t>(&QFtpDTP::connectState)) {
                *result = 3;
            }
        }
    }
}

const QMetaObject QFtpDTP::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_QFtpDTP.data,
      qt_meta_data_QFtpDTP,  qt_static_metacall, 0, 0}
};


const QMetaObject *QFtpDTP::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *QFtpDTP::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_QFtpDTP.stringdata))
        return static_cast<void*>(const_cast< QFtpDTP*>(this));
    return QObject::qt_metacast(_clname);
}

int QFtpDTP::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 11)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 11;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 11)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 11;
    }
    return _id;
}

// SIGNAL 0
void QFtpDTP::listInfo(const QUrlInfo & _t1)
{
    void *_a[] = { 0, const_cast<void*>(reinterpret_cast<const void*>(&_t1)) };
    QMetaObject::activate(this, &staticMetaObject, 0, _a);
}

// SIGNAL 1
void QFtpDTP::readyRead()
{
    QMetaObject::activate(this, &staticMetaObject, 1, 0);
}

// SIGNAL 2
void QFtpDTP::dataTransferProgress(qint64 _t1, qint64 _t2)
{
    void *_a[] = { 0, const_cast<void*>(reinterpret_cast<const void*>(&_t1)), const_cast<void*>(reinterpret_cast<const void*>(&_t2)) };
    QMetaObject::activate(this, &staticMetaObject, 2, _a);
}

// SIGNAL 3
void QFtpDTP::connectState(int _t1)
{
    void *_a[] = { 0, const_cast<void*>(reinterpret_cast<const void*>(&_t1)) };
    QMetaObject::activate(this, &staticMetaObject, 3, _a);
}
struct qt_meta_stringdata_QFtpPI_t {
    QByteArrayData data[13];
    char stringdata[162];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    offsetof(qt_meta_stringdata_QFtpPI_t, stringdata) + ofs \
        - idx * sizeof(QByteArrayData) \
    )
static const qt_meta_stringdata_QFtpPI_t qt_meta_stringdata_QFtpPI = {
    {
QT_MOC_LITERAL(0, 0, 6),
QT_MOC_LITERAL(1, 7, 12),
QT_MOC_LITERAL(2, 20, 0),
QT_MOC_LITERAL(3, 21, 8),
QT_MOC_LITERAL(4, 30, 5),
QT_MOC_LITERAL(5, 36, 11),
QT_MOC_LITERAL(6, 48, 9),
QT_MOC_LITERAL(7, 58, 9),
QT_MOC_LITERAL(8, 68, 16),
QT_MOC_LITERAL(9, 85, 20),
QT_MOC_LITERAL(10, 106, 9),
QT_MOC_LITERAL(11, 116, 28),
QT_MOC_LITERAL(12, 145, 15)
    },
    "QFtpPI\0connectState\0\0finished\0error\0"
    "rawFtpReply\0hostFound\0connected\0"
    "connectionClosed\0delayedCloseFinished\0"
    "readyRead\0QAbstractSocket::SocketError\0"
    "dtpConnectState\0"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_QFtpPI[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
      11,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       4,       // signalCount

 // signals: name, argc, parameters, tag, flags
       1,    1,   69,    2, 0x06,
       3,    1,   72,    2, 0x06,
       4,    2,   75,    2, 0x06,
       5,    2,   80,    2, 0x06,

 // slots: name, argc, parameters, tag, flags
       6,    0,   85,    2, 0x08,
       7,    0,   86,    2, 0x08,
       8,    0,   87,    2, 0x08,
       9,    0,   88,    2, 0x08,
      10,    0,   89,    2, 0x08,
       4,    1,   90,    2, 0x08,
      12,    1,   93,    2, 0x08,

 // signals: parameters
    QMetaType::Void, QMetaType::Int,    2,
    QMetaType::Void, QMetaType::QString,    2,
    QMetaType::Void, QMetaType::Int, QMetaType::QString,    2,    2,
    QMetaType::Void, QMetaType::Int, QMetaType::QString,    2,    2,

 // slots: parameters
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void, 0x80000000 | 11,    2,
    QMetaType::Void, QMetaType::Int,    2,

       0        // eod
};

void QFtpPI::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        QFtpPI *_t = static_cast<QFtpPI *>(_o);
        switch (_id) {
        case 0: _t->connectState((*reinterpret_cast< int(*)>(_a[1]))); break;
        case 1: _t->finished((*reinterpret_cast< const QString(*)>(_a[1]))); break;
        case 2: _t->error((*reinterpret_cast< int(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2]))); break;
        case 3: _t->rawFtpReply((*reinterpret_cast< int(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2]))); break;
        case 4: _t->hostFound(); break;
        case 5: _t->connected(); break;
        case 6: _t->connectionClosed(); break;
        case 7: _t->delayedCloseFinished(); break;
        case 8: _t->readyRead(); break;
        case 9: _t->error((*reinterpret_cast< QAbstractSocket::SocketError(*)>(_a[1]))); break;
        case 10: _t->dtpConnectState((*reinterpret_cast< int(*)>(_a[1]))); break;
        default: ;
        }
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        switch (_id) {
        default: *reinterpret_cast<int*>(_a[0]) = -1; break;
        case 9:
            switch (*reinterpret_cast<int*>(_a[1])) {
            default: *reinterpret_cast<int*>(_a[0]) = -1; break;
            case 0:
                *reinterpret_cast<int*>(_a[0]) = qRegisterMetaType< QAbstractSocket::SocketError >(); break;
            }
            break;
        }
    } else if (_c == QMetaObject::IndexOfMethod) {
        int *result = reinterpret_cast<int *>(_a[0]);
        void **func = reinterpret_cast<void **>(_a[1]);
        {
            typedef void (QFtpPI::*_t)(int );
            if (*reinterpret_cast<_t *>(func) == static_cast<_t>(&QFtpPI::connectState)) {
                *result = 0;
            }
        }
        {
            typedef void (QFtpPI::*_t)(const QString & );
            if (*reinterpret_cast<_t *>(func) == static_cast<_t>(&QFtpPI::finished)) {
                *result = 1;
            }
        }
        {
            typedef void (QFtpPI::*_t)(int , const QString & );
            if (*reinterpret_cast<_t *>(func) == static_cast<_t>(&QFtpPI::error)) {
                *result = 2;
            }
        }
        {
            typedef void (QFtpPI::*_t)(int , const QString & );
            if (*reinterpret_cast<_t *>(func) == static_cast<_t>(&QFtpPI::rawFtpReply)) {
                *result = 3;
            }
        }
    }
}

const QMetaObject QFtpPI::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_QFtpPI.data,
      qt_meta_data_QFtpPI,  qt_static_metacall, 0, 0}
};


const QMetaObject *QFtpPI::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *QFtpPI::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_QFtpPI.stringdata))
        return static_cast<void*>(const_cast< QFtpPI*>(this));
    return QObject::qt_metacast(_clname);
}

int QFtpPI::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 11)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 11;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 11)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 11;
    }
    return _id;
}

// SIGNAL 0
void QFtpPI::connectState(int _t1)
{
    void *_a[] = { 0, const_cast<void*>(reinterpret_cast<const void*>(&_t1)) };
    QMetaObject::activate(this, &staticMetaObject, 0, _a);
}

// SIGNAL 1
void QFtpPI::finished(const QString & _t1)
{
    void *_a[] = { 0, const_cast<void*>(reinterpret_cast<const void*>(&_t1)) };
    QMetaObject::activate(this, &staticMetaObject, 1, _a);
}

// SIGNAL 2
void QFtpPI::error(int _t1, const QString & _t2)
{
    void *_a[] = { 0, const_cast<void*>(reinterpret_cast<const void*>(&_t1)), const_cast<void*>(reinterpret_cast<const void*>(&_t2)) };
    QMetaObject::activate(this, &staticMetaObject, 2, _a);
}

// SIGNAL 3
void QFtpPI::rawFtpReply(int _t1, const QString & _t2)
{
    void *_a[] = { 0, const_cast<void*>(reinterpret_cast<const void*>(&_t1)), const_cast<void*>(reinterpret_cast<const void*>(&_t2)) };
    QMetaObject::activate(this, &staticMetaObject, 3, _a);
}
QT_END_MOC_NAMESPACE
